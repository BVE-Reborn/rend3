name: CI

on:
  push:
    branches: ["trunk", "CI/**"]
  pull_request:

env:
  RUSTFLAGS: --cfg=web_sys_unstable_apis -D warnings
  RUSTDOCFLAGS: -D warnings

jobs:
  build:
    timeout-minutes: 30

    strategy:
      matrix:
        include:
          # wasm
          - name: "wasm"
            os: "ubuntu-latest"
            target: "wasm32-unknown-unknown"

          # native
          - name: "linux"
            os: "ubuntu-latest"
            target: "x86_64-unknown-linux-gnu"
          - name: "mac"
            os: ["macOS", "gpu"]
            target: "aarch64-apple-darwin"
          - name: "windows"
            os: "windows-latest"
            target: "x86_64-pc-windows-msvc"
      fail-fast: false
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.name }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust toolchain
        id: setup-rust
        run: |
          rustup toolchain install 1.72 -c clippy -t ${{ matrix.target }}

      - name: Install cargo-nextest and cargo-llvm-cov
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest

      - name: caching
        uses: Swatinem/rust-cache@v2
        if: matrix.os[1] != 'gpu'
        with:
          key: ${{ matrix.target }}-b # suffix for cache busting

      - name: build
        run: |
          cargo +1.72 build --target ${{ matrix.target }} --profile ci
        if: matrix.target != 'wasm32-unknown-unknown'

      - name: test
        run: |
          cargo +1.72 nextest run --target ${{ matrix.target }} --cargo-profile ci
        if: matrix.target != 'wasm32-unknown-unknown'

      - name: clippy (rend3-gltf featureless)
        run: |
          cargo +1.72 clippy --target ${{ matrix.target }} --profile ci -p rend3-gltf --no-default-features

      - name: clippy
        run: |
          cargo +1.72 clippy --target ${{ matrix.target }} --profile ci
        if: matrix.target != 'wasm32-unknown-unknown'

      - name: doc
        run: |
          cargo +1.72 doc --target ${{ matrix.target }} --profile ci --no-deps
        if: matrix.target != 'wasm32-unknown-unknown'
      
      - uses: actions/upload-artifact@v3
        with:
          name: comparison-images-${{ matrix.name }}
          path: |
            **/*-success.png
            **/*-failure.png
            **/*-diff.png

  cargo-fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust toolchain
        id: setup-rust
        run: |
          rustup toolchain install 1.72 -c rustfmt

      - name: format
        run: |
          cargo +1.72 fmt --check

  cargo-deny:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          log-level: warn
          command: check
          arguments: --all-features
